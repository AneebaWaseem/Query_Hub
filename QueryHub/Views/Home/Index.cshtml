@{
    ViewData["Title"] = "Home";
}

@model List<Question>

<div class="fs-5 px-3">
    <div>
        <div>
            <h1 class="fs-2 text-center">
                <span id="textContainer" class="typewriter"></span>
            </h1>
            <p class="text-center">Your place to ask and answer queries.</p>

            <div>
                <div class="card shadow-sm rounded-border">
                    <div class="card-body bg-light text-center">
                        <div class="mt-3 text-center">
                            <p class="fs-4">Finding something difficult?</p>
                            <p class="fs-6">
                                Get connected with the tech community and get answers from
                                masterminds over the world
                            </p>
                            <div><a asp-controller="Question" asp-action="Ask" class="btn btn-primary px-3 m-2">Ask a Query</a></div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>

    <div class="mt-4">
        <h2 class="fs-3">Most Recent Questions</h2>
        <div class="list-group">
            @foreach (Question question in Model)
            {
                <div class="mt-4 list-group-item py-3 bg-light fw-medium fs-5 shadow-sm">
                    <div class="d-flex justify-content-between align-items-center flex-wrap">
                        <div class="d-flex align-items-center">
                            <i class="bi bi-person-circle text-dark fs-5 me-2"></i>
                            <span class="fw-medium fs-6 mt-1">@question.AppUser.UserName</span>
                        </div>
                        <small class="text-muted fw-medium fs-6 mt-1">@question.CreatedAt.ToString("MMM dd, yyyy")</small>
                    </div>

                    <a class="text-dark text-decoration-none" asp-controller="Question" asp-action="Show" asp-route-id="@question.Id"><h6 class="mt-2 truncated-desc" style=" line-height: 1.6;">@question.Description</h6></a>

                    <div class="d-flex justify-content-between align-items-center flex-wrap">
                        <div class="mt-2">
                            @{
                                foreach (var st in question.Tags)
                                {
                                    <span class="badge border border-primary bg-light text-primary fw-normal fs-6">@st.Name</span>
                                }
                            }
                    </div>
                        <div class="mt-2 d-flex justify-content-end">
                        @* <a class=" btn btn-outline-primary text-decoration-none" asp-controller="Question" asp-action="Save" asp-route-id="@question.Id">Save Query</a> *@
                        <a class="ms-2 btn btn-primary text-decoration-none" asp-controller="Question" asp-action="Show" asp-route-id="@question.Id">View Answers</a>
                    </div>
                </div>
            </div>
            }
        </div>
    </div>
</div>

@section Scripts{
    <script>
        const UserName = '@User.Identity?.Name'; 
        const fullText = `Welcome to QueryHub, ${UserName}!`;
        let i = 0;

        function typeWriter(isSmallScreen) {
            const container = document.getElementById("textContainer");
            container.innerHTML = ""; // Clear previous content
            i = 0;

            function write() {
                if (i < fullText.length) {
                    // Handle line break for small screens
                    if (isSmallScreen && i === fullText.indexOf("QueryHub") + 10) {
                        container.innerHTML += "<br>";
                    }

                    // Color segments dynamically based on index
                    if (i >= 11 && i < 20) {
                        container.innerHTML += `<span style="color:#0198cf;">${fullText.charAt(i)}</span>`;
                    } else if (i >= 20) {
                        container.innerHTML += `<span style="color:rgb(0, 0, 84);">${fullText.charAt(i)}</span>`;
                    } else {
                        container.innerHTML += fullText.charAt(i);
                    }

                    i++;
                    setTimeout(write, 50);
                }
            }

            write();
        }

        // Detect screen size and adjust
        function checkScreenSize() {
            let isSmallScreen = window.innerWidth < 992; // Bootstrap lg breakpoint
            typeWriter(isSmallScreen);
        }

        // Run on load & resize
        window.addEventListener("load", checkScreenSize);
        window.addEventListener("resize", checkScreenSize);

        // Ensure animation completes on page load
        document.addEventListener("DOMContentLoaded", function () {
            setTimeout(() => {
                document.querySelector(".typewriter").classList.add("done");
            }, 3000); // 3s matches typing duration
        });
    </script>

}
